cargo-features = ["per-package-target"]

[package]
name = "mutiny-wasm"
version = "1.14.6"
edition = "2021"
authors = ["utxostack"]
forced-target = "wasm32-unknown-unknown"
description = "A wasm-bindgen wrapper around mutiny-core"
license = "MIT"
documentation = "https://docs.rs/mutiny-wasm"
homepage = "https://mutinywallet.com"
repository = "https://github.com/mutinywallet/mutiny-node"

[lib]
crate-type = ["cdylib"]

[dependencies]
mutiny-core = { path = "../mutiny-core" }

anyhow = "1.0"
async-trait = "0.1.68"
wasm-bindgen = "0.2.91"
wasm-bindgen-futures = "0.4.38"
serde-wasm-bindgen = "0.6"
serde = { version = "^1.0", features = ["derive"] }
serde_json = { version = "^1.0" }
base64 = "0.13.1"
bitcoin = { version = "0.32.2", default-features = false, features = [
  "std",
  "serde",
  "secp-recovery",
  "rand",
] }
lightning = { version = "0.0.124", default-features = false, features = [
  "std",
] }
lightning-invoice = { version = "0.32.0" }
thiserror = "1.0"
instant = { version = "0.1", features = ["wasm-bindgen"] }
log = { version = "0.4.17", features = ["std"] }
rexie = "0.5.0"
gloo-utils = { version = "0.2.0", features = ["serde"] }
web-sys = { version = "0.3.60", features = ["console", "BroadcastChannel"] }
bip39 = { version = "2.0.0" }
getrandom = { version = "0.2", features = ["js"] }
futures = "0.3.25"
urlencoding = "2.1.2"
once_cell = "1.18.0"
hex-conservative = "0.1.1"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying. Alas, we do it anyways.
console_error_panic_hook = { version = "0.1.7" }

[dev-dependencies]
wasm-bindgen-test = "0.3.33"
web-sys = { version = "0.3.65", features = ["console"] }
js-sys = "0.3.65"

[features]
default = []

[package.metadata.wasm-pack.profile.release]
wasm-opt = true
